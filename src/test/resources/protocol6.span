# Example Protocol
# TODO: fix the need for this guardf (union is enabled....)

.metadata

    version : 1.0;
    recipe depth : 2;

.constants

    fraction p : 1/2;

.signature

    // Need to parse sorts first / Check other orders
    // T, W are reserved strings for names/functions/types/variables;

    sort : PKey, SKey, Nonce, Message;
    subsort : PKey, SKey, Nonce < Message;

    variables : m, y1, y2, y3, x1 | Message;
    variables : r, k, x2 | Nonce;

    function : enc | Message Nonce PKey -> Message;
    function : dec | Message SKey -> Message;
    function : pk | Nonce -> PKey;
    function : sk | Nonce -> SKey;

    public names : a | Message;

    private names : m1 , m2 | Message;
    private names : s, r1, r2, r3, r4, k1, k2, k3 | Nonce;

.rewrites

    rewrite : dec(enc(m,r,pk(k)), sk(k)) -> m;

.roles

    role :  {1} [T] out(1 -> enc(enc(m1,r1, pk(k1)),r2, pk(km))) .
            {1} [T] out(1 -> enc(enc(m2,r3, pk(k2)),r4, pk(km))) .
            {2} in(y1{enc(x1,x2, pk(km))}) .
            {2} in(y2{enc(x1, x2, pk(km))}) .
            {2} [y1 != y2] out(p -> dec(y1, sk(km)) # dec(y2, sk(km)) + p -> dec(y2, sk(km)) # dec(y1, sk(km))) .
            {3} in(y3{enc(m2,r3, pk(k2))}) .
            {3} [ y3 == enc(m2,r3, pk(k2))  ] out(1 -> s)

.safety
    secrecy : s >= 1/2;